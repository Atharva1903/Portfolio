---
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";

const isDev = import.meta.env.DEV;

let pages = [
	{
		title: "Home",
		url: "/",
	},
	// {
	// 	title: "Services",
	// 	url: "/services",
	// },
	{
		title: "About",
		url: "/#about-me-section",
	},
	{
		title: "Education",
		url: "/#education",
	},
	{
		title: "Projects",
		url: "/#projects",
	},
	{
		title: "Contact",
		url: "/contact/",
	},
];

// if (isDev) {
// 	pages.push({
// 		title: "Overview",
// 		url: "/system/overview",
// 	});
// }

const { pathname } = Astro.url;
---

<header>
	<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Dancing+Script:wght@400..700&display=swap" rel="stylesheet">
	<a href="/" aria-label="Home" class="logo absolute z-50 flex h-[4.5rem] items-center lg:h-[5.9rem]">
		<span style="font-family: 'Dancing Script', cursive;" class="text-xl md:text-2xl tracking-wide text-slate-900">Atharva Kakade</span>
	</a>
	<div data-xdata="{ open: false }" class="navigation fixed right-0 top-0 z-50" data-xbind.class="{'w-full navbar-open': open}">
		<div class="ml-auto md:max-w-fit" data-xbind.class="{'max-w-3xl': open, 'max-w-[8rem]': !open }">
			<div class="mx-auto w-full">
				<div
					class="shadow-thick resizable nav-container squircle relative mx-auto flex w-full flex-col justify-center overflow-x-hidden bg-zinc-900/70 backdrop-blur-xl backdrop-filter md:flex-row-reverse">
					<div class="flex flex-row items-center justify-end lg:hidden">
						<a class="px-3 py-[0.4rem] pl-4" href="/contact/" aria-label="Contact Page">
							<Icon class="text-white" name="octicon:mail-16" width="20" data-xbind.class="{'hidden': open}" />
						</a>
						<button
							data-xon.click="open = !open"
							data-xbind.style="{'padding-top': open ? '1rem' : '0.4rem'}"
							aria-label="Open navbar"
							class="inline-flex items-center justify-center px-3 py-[0.4rem] pr-4 text-white hover:text-blue-300 focus:text-white focus:outline-none">
							<svg class="h-6 w-6" stroke="currentColor" fill="none" viewBox="0 0 24 24">
								<path
									data-xbind.class="{'hidden': open, 'inline-flex': !open }"
									class="inline-flex"
									stroke-linecap="round"
									stroke-linejoin="round"
									stroke-width="2"
									d="M4 6h16M4 12h16M4 18h16">
								</path>
								<path
									data-xbind.class="{'hidden': !open, 'inline-flex': open }"
									class="hidden"
									stroke-linecap="round"
									stroke-linejoin="round"
									stroke-width="2"
									d="M6 18L18 6M6 6l12 12">
								</path>
							</svg>
						</button>
					</div>
					<nav data-xbind.class="{'flex': open, 'hidden': !open}" class="hidden flex-grow flex-col justify-center py-12 lg:flex lg:py-0">
						<div class="menu-bg">
							<ul
								class="flex list-none flex-col items-end justify-center gap-2 px-2 text-center text-3xl md:flex-row md:items-center md:text-base">
								{
									pages.map((page) => (
										<li data-cursor-hover>
											<a
												href={page.url}
												class={`inline-block cursor-pointer px-1 py-[0.33rem] ${
													page.url === pathname ||
													page.url === pathname.replace(/^\/it|\/$/, "") ||
													(page.url === "/blog" && (pathname.startsWith("/blog") || pathname.startsWith("/it/blog")))
														? "active"
														: ""
												}`}
												data-nav-link
												>
												<span class="menu-item-container inline-block">
													<span class="menu-item px-4 py-1 font-semibold uppercase tracking-wide text-zinc-400 hover:text-white focus:text-white focus:shadow-none focus:outline-none">
														{page.title}
													</span>
												</span>
											</a>
										</li>
									))
								}
							</ul>
						</div>
					</nav>
				</div>
			</div>
		</div>
	</div>
</header>

<style>
	.navigation {
		mix-blend-mode: difference;
	}
	.navigation.navbar-open {
		mix-blend-mode: luminosity;
	}
	.navigation,
	.logo {
		padding: 1rem var(--base-padding-x);
	}
	@media (min-width: 1025px) {
		.navigation,
		.logo {
			padding: 2rem var(--base-padding-x);
		}
	}

	/* Glass morphism styles */
	.nav-container {
		background: rgba(24, 24, 27, 0.7);
		backdrop-filter: blur(50px);
		-webkit-backdrop-filter: blur(12px);
		box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
	}

	/* Menu item hover effect */
	.menu-item {
		position: relative;
		transition: all 0.3s ease;
	}

	.menu-item:hover {
		color: white;
		text-shadow: 0 0 8px rgba(255, 255, 255, 0.5);
	}

	.menu-item.active {
		color: white;
		text-shadow: 0 0 8px rgba(255, 255, 255, 0.5);
	}
	.dancing-script-<uniquifier> {
		font-family: "Dancing Script", cursive;
		font-optical-sizing: auto;
		font-weight: 700;
		font-style: normal;
	}
	.resizable:before {
		content: "|";
		position: absolute;
		left: 0.4rem;
		top: 0.36rem;
		font-size: 12px;
		line-height: 23px;
		color: transparent;
	}

	.menu-bg {
		background: rgb(245, 245, 245, 0.121);
		border-radius: 0.7 rem;
		padding: 0.2rem 1rem;
		display: inline-block;
		box-shadow: 0 2px 8px rgba(0,0,0,0.06);
		border: 1px solid rgba(180, 180, 180, 0.058);
	}
	@media (max-width: 1024px) {
		.menu-bg {
			padding: 0.5rem 0.5rem;
		}
	}
</style>

<script>
	import { gsap } from "gsap";
	import { ScrollTrigger } from "gsap/ScrollTrigger";
	import { DrawSVGPlugin } from "gsap/DrawSVGPlugin";
	import { ScrollToPlugin } from "gsap/ScrollToPlugin";

	gsap.registerPlugin(DrawSVGPlugin, ScrollTrigger, ScrollToPlugin);

	function init() {
		gsap.timeline({
			defaults: {
				duration: 1,
				ease: "power2.out",
			},
		})
			.from(".logo-svg path", { drawSVG: 0 })
			.to(".logo-svg path", { fill: "#000", duration: 2 }, "<+=0.5");

		// Smooth scroll for navigation links
		document.querySelectorAll('[data-nav-link]').forEach(link => {
			link.addEventListener('click', (e) => {
				const href = link.getAttribute('href');
				if (href && href.startsWith('/#')) {
					e.preventDefault();
					const targetId = href.substring(2);
					gsap.to(window, {
						duration: 1,
						scrollTo: `#${targetId}`,
						ease: "power2.out"
					});
				}
			});
		});

		const isTouchDevice = window.matchMedia("(hover: none)").matches;

		// Only run collapse/expand logic for desktop
		if (window.innerWidth > 1024 && !isTouchDevice) {
			let menuCollapsed = false;
			let isHoveringMenu = false;

			const pageLinksUl = document.querySelector("header .nav-container nav ul");
			if (!pageLinksUl) return;

			let menuCollapseTl = gsap
				.timeline({
					defaults: {
						ease: "back.inOut(1.7)",
						duration: 0.4,
					},
					paused: true,
					onStart: () => {
						pageLinksUl.classList.add("collapsed");
					},
				})
				.to("header .nav-container", { width: 125 })
				.to(
					pageLinksUl,
					{
						x: () => {
							const pathName = window.location.pathname;

							if (pathName === "/" || pathName === "/it/") {
								return "16rem";
							} else if (pathName.startsWith("/blog") || pathName.startsWith("/it/blog")) {
								return "3.5rem";
							}

							return "-3.5rem";
						},
					},
					"<",
				);

			function expandMenu() {
				menuCollapseTl.reverse();
				pageLinksUl?.classList.remove("collapsed");
				document.querySelector("header .navigation")?.classList.remove("collapsed");
				menuCollapsed = false;
			}

			function collapseMenu() {
				if (window.scrollY > 200) {
					menuCollapseTl.play();
					pageLinksUl?.classList.add("collapsed");
					document.querySelector("header .navigation")?.classList.add("collapsed");
					menuCollapsed = true;
				}
			}

			collapseMenu();

			const navContainer = document.querySelector(".nav-container");

			function mouseEnterHandler() {
				isHoveringMenu = true;
				expandMenu();
			}

			function mouseLeaveHandler() {
				isHoveringMenu = false;
				collapseMenu();
			}

			function handleScroll() {
				if (window.scrollY > 200 && !isHoveringMenu && !menuCollapsed) {
					collapseMenu();
				} else if (window.scrollY <= 200 && menuCollapsed) {
					expandMenu();
				}
			}

			navContainer?.removeEventListener("mouseenter", mouseEnterHandler);
			navContainer?.addEventListener("mouseenter", mouseEnterHandler);

			navContainer?.removeEventListener("mouseleave", mouseLeaveHandler);
			navContainer?.addEventListener("mouseleave", mouseLeaveHandler);

			window?.removeEventListener("scroll", handleScroll);
			window?.addEventListener("scroll", handleScroll);
		}
	}

	document.removeEventListener("DOMContentLoaded", init); // astro:page-load
	document.addEventListener("DOMContentLoaded", init); // astro:page-load
</script>
