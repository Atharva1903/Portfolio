<aside class="social-bar">
  <nav class="icon-list">
    <!-- Contact Icon (Paper Plane) -->
    <a href="/contact" aria-label="Contact" class="icon-link">
      <svg class="social-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" viewBox="0 0 24 24">
        <path d="M22 2L11 13" />
        <polygon points="22 2 15 22 11 13 2 9 22 2" />
      </svg>
    </a>
    <!-- LinkedIn -->
    <a href="https://www.linkedin.com/in/atharva-kakade/" target="_blank" rel="noopener noreferrer" aria-label="LinkedIn" class="icon-link">
      <svg class="social-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
        <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
      </svg>
    </a>
    <!-- Instagram -->
    <a href="https://www.instagram.com/k.atharva_19?igsh=d2s0bXJzMXNwOGhv" target="_blank" rel="noopener noreferrer" aria-label="Instagram" class="icon-link">
      <svg class="social-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
        <path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z"/>
      </svg>
    </a>
    <!-- GitHub -->
    <a href="https://github.com/Atharva1903" target="_blank" rel="noopener noreferrer" aria-label="GitHub" class="icon-link">
      <svg class="social-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
        <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
      </svg>
    </a>
    <div class="vertical-line"></div>
  </nav>
</aside>

<script>
  if (typeof window !== 'undefined') {
    window.addEventListener('DOMContentLoaded', () => {
      const bar = document.querySelector('.social-bar');
      const icons = document.querySelectorAll('.icon-link .social-icon');
      const vline = document.querySelector('.vertical-line');
      const footer = document.querySelector('footer');
      const about = document.querySelector('#about-me-section');
      const education = document.querySelector('#education');
      if (!bar || !footer || !about || !education) return;
      function setIconColor(white: boolean) {
        icons.forEach(icon => {
          (icon as HTMLElement).style.transition = 'color 0.2s, fill 0.2s';
          (icon as HTMLElement).style.color = white ? '#fff' : '#111';
          (icon as HTMLElement).style.fill = white ? '#fff' : '#111';
        });
        if (vline) {
          (vline as HTMLElement).style.transition = 'background 0.2s';
          (vline as HTMLElement).style.background = white ? '#fff' : '#111';
        }
      }
      // Observe both sections for color change
      let currentColor: 'white' | 'black' = 'black';
      const observerSections = new window.IntersectionObserver((entries) => {
        let educationInView = false;
        let aboutInView = false;
        entries.forEach(entry => {
          if (entry.target === education && entry.isIntersecting) educationInView = true;
          if (entry.target === about && entry.isIntersecting) aboutInView = true;
        });
        if (educationInView && currentColor !== 'white') {
          setIconColor(true);
          currentColor = 'white';
        } else if (aboutInView && !educationInView && currentColor !== 'black') {
          setIconColor(false);
          currentColor = 'black';
        }
      }, { threshold: 0.2 });
      observerSections.observe(education);
      observerSections.observe(about);
      // Footer intersection observer for hiding
      const observer = new window.IntersectionObserver(
        ([entry]) => {
          if (entry.isIntersecting) {
            bar.classList.add('slide-down');
            icons.forEach((icon, i) => {
              (icon as HTMLElement).style.transitionDelay = `${i * 0.07}s`;
            });
            if (vline) (vline as HTMLElement).style.transitionDelay = `${icons.length * 0.07}s`;
          } else {
            bar.classList.remove('slide-down');
            icons.forEach((icon) => {
              (icon as HTMLElement).style.transitionDelay = '0s';
            });
            if (vline) (vline as HTMLElement).style.transitionDelay = '0s';
          }
        },
        { root: null, threshold: 0.01 }
      );
      observer.observe(footer);
      // Set initial color to black
      setIconColor(false);
    });
  }
</script>

<style>
.social-bar {
  position: fixed;
  left: 2rem;
  bottom: 2rem;
  z-index: 50;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  height: auto;
  padding: 0;
  background: none;
  transition: none;
}
.icon-list {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 0.7rem;
  position: relative;
}
.icon-link {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 1.8rem;
  height: 1.8rem;
  background: none;
  border-radius: 0.5rem;
  box-shadow: none;
  padding: 0;
  transition: transform 0.4s cubic-bezier(0.7,0,0.3,1), opacity 0.4s cubic-bezier(0.7,0,0.3,1);
}
.social-icon {
  width: 1.5rem;
  height: 1.5rem;
  display: block;
  color: #111;
  fill: #111;
  transition: color 0.2s, fill 0.2s;
}
body.dark .social-icon, .dark .social-icon {
  color: #fff;
  fill: #fff;
}
.icon-link:hover .social-icon {
  color: #2563eb;
  fill: #2563eb;
}
.vertical-line {
  width: 2px;
  height: 2.5rem;
  margin: 0.7rem auto 0 auto;
  background: #111;
  opacity: 0.3;
  transition: background 0.2s, opacity 0.4s, transform 0.5s cubic-bezier(0.7,0,0.3,1);
}
body.dark .vertical-line, .dark .vertical-line {
  background: #fff;
}
.social-bar.slide-down .icon-link {
  transform: translateY(60px) scale(0.7);
  opacity: 0;
  pointer-events: none;
}
.social-bar.slide-down .vertical-line {
  transform: translateY(60px) scaleY(0.5);
  opacity: 0;
}
@media (max-width: 1024px) {
  .social-bar {
    display: none;
  }
}
</style> 